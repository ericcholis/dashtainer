{% extends '@Dashtainer/project/service/update.html.twig' %}

{% block serviceContent %}
<form action="{{ path('project.service.update.post', {
    'projectId': project.id,
    'serviceId': service.id,
}) }}" method="post" data-ajax>
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="form-group col">
                <label class="form-label" for="name">Service Name</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">{{ availableAsSecret|raw }}</span>
                    </div>
                    <input type="text" class="form-control" maxlength="64"
                           id="name" placeholder=""
                           data-update-text="service-name-tag"
                           value="{{ service.name }}" disabled />
                </div>
            </div>
        </div>

        <div class="alert alert-icon alert-info mb-6" role="alert">
            <i class="fe fe-bell mr-2" aria-hidden="true"></i>
            This service is available <strong>privately</strong> at
            <span class="badge badge-primary text-lg">
                <span class="tag-addon-left"><i class="fa fa-lock"></i></span>
                <span id="service-name-tag">{{ service.name }}</span>:3306</span>
        </div>

        <hr class="my-6" />

        <h4 class="mb-3">Database Credentials</h4>

        <div class="row form-group">
            <div class="col">
                <small class="text-muted">
                    Credentials are available as Docker Secrets. Other services may import
                    and use them without having to hardcode the actual value.
                </small>
            </div>
        </div>

        <div class="row">
            <div class="col form-group">
                <label class="form-label" for="mysql_root_password">Root Password</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">{{ availableAsSecret|raw }}</span>
                    </div>
                    <input type="text" class="form-control" maxlength="64"
                           id="mysql_root_password" name="mysql_root_password" placeholder=""
                           value="{{ mysql_root_password }}" required
                           data-error-container="mysql_root_password" />
                </div>
                <div class="invalid-feedback"
                     data-error-container-name="mysql_root_password"></div>
                <small class="text-muted">
                    Password for the <code>root</code> user.
                </small>
            </div>
        </div>

        <div class="row">
            <div class="col form-group">
                <label class="form-label" for="mysql_database">Database</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">{{ availableAsSecret|raw }}</span>
                    </div>
                    <input type="text" class="form-control" maxlength="64"
                           id="mysql_database" name="mysql_database" placeholder=""
                           value="{{ mysql_database }}" required
                           data-error-container="mysql_database" />
                </div>
                <div class="invalid-feedback"
                     data-error-container-name="mysql_database"></div>
                <small class="text-muted">
                    Database to create on init.
                </small>
            </div>
        </div>

        <div class="row">
            <div class="col form-group">
                <label class="form-label" for="mysql_user">User</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">{{ availableAsSecret|raw }}</span>
                    </div>
                    <input type="text" class="form-control" maxlength="64"
                           id="mysql_user" name="mysql_user" placeholder=""
                           value="{{ mysql_user }}" required
                           data-error-container="mysql_user" />
                </div>
                <div class="invalid-feedback"
                     data-error-container-name="mysql_user"></div>
                <small class="text-muted">
                    Non-root user.
                </small>
            </div>
        </div>

        <div class="row">
            <div class="col form-group">
                <label class="form-label" for="mysql_password">User Password</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">{{ availableAsSecret|raw }}</span>
                    </div>
                <input type="text" class="form-control" maxlength="64"
                       id="mysql_password" name="mysql_password" placeholder=""
                       value="{{ mysql_password }}" required
                       data-error-container="mysql_password" />
                </div>
                <div class="invalid-feedback"
                     data-error-container-name="mysql_password"></div>
                <small class="text-muted">
                    Password for User.
                </small>
            </div>
        </div>

        <hr class="my-6" />

        {% set volume = volumes.other.remove('datadir') %}
        {% embed '@Dashtainer/project/service/snippets/volume-datadir.html.twig' with {'volume': volume} %}
            {% block dataDir %}
                <div class="row">
                    <div class="form-group col">
                        <label>Init Directory</label>

                        <p>
                            Any <code>.sh</code>, <code>.sql</code> and <code>.sql.gz</code>
                            within the
                            <code><span id="initdir">{{ service.name }}</span>/init</code>
                            directory will be executed or imported into the defined database.
                            Files will be executed in alphabetical order.
                        </p>
                    </div>
                </div>
            {% endblock %}
        {% endembed %}

        <hr class="my-6" />

        <div class="row">
            <div class="col">
                <label class="form-label" for="port">Bind Port</label>
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input"
                                       value="1" id="port_confirm" name="port_confirm"
                                       {{ portConfirm ? 'checked' }} />
                                <label class="custom-control-label" for="port_confirm">Enable</label>
                            </div>
                        </div>
                    </div>
                    <input type="number" id="port" name="port" class="form-control"
                           min="3306" max="65535" value="{{ bindPort }}" data-update-text="port-tag"
                           data-error-container="port" />
                </div>

                <div class="invalid-feedback" data-error-container-name="port"></div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <small class="text-muted">
                    Bind port on your localhost to this service's <code>3306</code> port.
                    <br />
                    Useful for connecting a GUI like Sequel Pro or MySQL Workbench via
                    <span class="badge badge-primary text-lg">
                        localhost:<span id="port-tag">{{ bindPort }}</span></span>.
                    <br />
                    This is disabled by default and should only be enabled in local dev environments.
                    <br />
                    To enable you must check the checkbox and enter a port.
                    <br />
                    The preferred method of accessing your database is to create an Adminer service.
                </small>
            </div>
        </div>

        <input type="hidden" id="version" name="version" value="{{ version }}" />
    </div>
</div>

{% include '@Dashtainer/project/service/snippets/volume-file.html.twig' %}
{% include '@Dashtainer/project/service/snippets/network.html.twig' %}
{% include '@Dashtainer/project/service/snippets/secret.html.twig' %}
{% include '@Dashtainer/project/service/snippets/volume.html.twig' %}

<button class="btn btn-primary btn-lg btn-block" type="submit">Update Service</button>
</form>
{% endblock %}
