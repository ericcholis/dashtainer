-
    type: PHP-FPM
    name: packages-5.6
    data:
        available:
            - php5.6-bcmath
            - php5.6-bz2
            - php5.6-cgi
            - php5.6-dba
            - php5.6-dev
            - php5.6-enchant
            - php5.6-gd
            - php5.6-gmp
            - php5.6-imap
            - php5.6-interbase
            - php5.6-ldap
            - php5.6-odbc
            - php5.6-pgsql
            - php5.6-phpdbg
            - php5.6-pspell
            - php5.6-readline
            - php5.6-recode
            - php5.6-snmp
            - php5.6-soap
            - php5.6-sqlite3
            - php5.6-sybase
            - php5.6-tidy
            - php5.6-xmlrpc
            - php5.6-xsl
            - php5.6-zip
        default:
            - php5.6-fpm
            - php5.6-cli
            - php5.6-curl
            - php5.6-intl
            - php5.6-json
            - php5.6-mbstring
            - php5.6-mcrypt
            - php5.6-mysql
            - php5.6-opcache
            - php5.6-xml
-
    type: PHP-FPM
    name: packages-7.0
    data:
        available:
            - php7.0-bcmath
            - php7.0-bz2
            - php7.0-cgi
            - php7.0-dba
            - php7.0-dev
            - php7.0-enchant
            - php7.0-gd
            - php7.0-gmp
            - php7.0-imap
            - php7.0-interbase
            - php7.0-ldap
            - php7.0-odbc
            - php7.0-pgsql
            - php7.0-phpdbg
            - php7.0-pspell
            - php7.0-readline
            - php7.0-recode
            - php7.0-snmp
            - php7.0-soap
            - php7.0-sqlite3
            - php7.0-sybase
            - php7.0-tidy
            - php7.0-xmlrpc
            - php7.0-xsl
            - php7.0-zip
        default:
            - php7.0-fpm
            - php7.0-cli
            - php7.0-curl
            - php7.0-intl
            - php7.0-json
            - php7.0-mbstring
            - php7.0-mcrypt
            - php7.0-mysql
            - php7.0-opcache
            - php7.0-xml
-
    type: PHP-FPM
    name: packages-7.1
    data:
        available:
            - php7.1-bcmath
            - php7.1-bz2
            - php7.1-cgi
            - php7.1-dba
            - php7.1-dev
            - php7.1-enchant
            - php7.1-gd
            - php7.1-gmp
            - php7.1-imap
            - php7.1-interbase
            - php7.1-ldap
            - php7.1-odbc
            - php7.1-pgsql
            - php7.1-phpdbg
            - php7.1-pspell
            - php7.1-readline
            - php7.1-recode
            - php7.1-snmp
            - php7.1-soap
            - php7.1-sqlite3
            - php7.1-sybase
            - php7.1-tidy
            - php7.1-xmlrpc
            - php7.1-xsl
            - php7.1-zip
        default:
            - php7.1-fpm
            - php7.1-cli
            - php7.1-curl
            - php7.1-intl
            - php7.1-json
            - php7.1-mbstring
            - php7.1-mcrypt
            - php7.1-mysql
            - php7.1-opcache
            - php7.1-xml
-
    type: PHP-FPM
    name: packages-7.2
    data:
        available:
            - php7.2-bcmath
            - php7.2-bz2
            - php7.2-cgi
            - php7.2-dba
            - php7.2-dev
            - php7.2-enchant
            - php7.2-gd
            - php7.2-gmp
            - php7.2-imap
            - php7.2-interbase
            - php7.2-ldap
            - php7.2-odbc
            - php7.2-pgsql
            - php7.2-phpdbg
            - php7.2-pspell
            - php7.2-readline
            - php7.2-recode
            - php7.2-snmp
            - php7.2-soap
            - php7.2-sqlite3
            - php7.2-sybase
            - php7.2-tidy
            - php7.2-xmlrpc
            - php7.2-xsl
            - php7.2-zip
        default:
            - php7.2-fpm
            - php7.2-cli
            - php7.2-curl
            - php7.2-intl
            - php7.2-json
            - php7.2-mbstring
            - php7.2-mysql
            - php7.2-opcache
            - php7.2-xml
-
    type: PHP-FPM
    name: packages-general
    data:
        available:
            - php-all-dev
            - php-amqp
            - php-apcu
            - php-apcu-bc
            - php-ast
            - php-ds
            - php-gearman
            - php-geoip
            - php-gettext
            - php-gmagick
            - php-gnupg
            - php-http
            - php-igbinary
            - php-imagick
            - php-libvirt-php
            - php-lua
            - php-mailparse
            - php-memcache
            - php-memcached
            - php-mongo
            - php-mongodb
            - php-msgpack
            - php-mysqlnd-ms
            - php-oauth
            - php-pecl-http
            - php-pecl-http-dev
            - php-phalcon
            - php-propro
            - php-propro-dev
            - php-radius
            - php-raphf
            - php-raphf-dev
            - php-redis
            - php-rrd
            - php-sass
            - php-smbclient
            - php-sodium
            - php-solr
            - php-ssh2
            - php-stomp
            - php-tideways
            - php-uploadprogress
            - php-uuid
            - php-xcache
            - php-xdebug
            - php-xhprof
            - php-yac
            - php-yaml
            - php-zmq
        default:
            - php-pear
-
    type: PHP-FPM
    name: ini-5.6
    data:
        php.ini: |
            ; /etc/php/5.6/mods-available/zzzz_custom.ini
            ; used in both PHP-FPM and PHP-CLI

            [custom]
            display_errors = "On"
            error_reporting = -1
            date.timezone = "UTC"
            session.save_path = "/var/lib/php/sessions"
            opcache.enable = 1
            opcache.enable_cli = 1
            opcache.fast_shutdown = 1
            opcache.interned_strings_buffer = 16
            opcache.max_accelerated_files = 40000
            opcache.memory_consumption = 256
            opcache.revalidate_freq = 0
            opcache.validate_timestamps = 1
        php-fpm.conf: |
            ; /etc/php/5.6/fpm/php-fpm.conf

            [global]
            pid = /run/php-fpm.pid
            error_log = syslog

            [www]
            listen = "0.0.0.0:9000"
            pm = "dynamic"
            pm.max_children = 5
            pm.start_servers = 2
            pm.min_spare_servers = 1
            pm.max_spare_servers = 3
            security.limit_extensions = ".php"
-
    type: PHP-FPM
    name: ini-7.0
    data:
        php.ini: |
            ; /etc/php/7.0/mods-available/zzzz_custom.ini
            ; used in both PHP-FPM and PHP-CLI

            [custom]
            display_errors = "On"
            error_reporting = -1
            date.timezone = "UTC"
            session.save_path = "/var/lib/php/sessions"
            opcache.enable = 1
            opcache.enable_cli = 1
            opcache.fast_shutdown = 1
            opcache.interned_strings_buffer = 16
            opcache.max_accelerated_files = 40000
            opcache.memory_consumption = 256
            opcache.revalidate_freq = 0
            opcache.validate_timestamps = 1
        php-fpm.conf: |
            ; /etc/php/7.0/fpm/php-fpm.conf

            [global]
            pid = /run/php-fpm.pid
            error_log = syslog

            [www]
            listen = "0.0.0.0:9000"
            pm = "dynamic"
            pm.max_children = 5
            pm.start_servers = 2
            pm.min_spare_servers = 1
            pm.max_spare_servers = 3
            security.limit_extensions = ".php"
-
    type: PHP-FPM
    name: ini-7.1
    data:
        php.ini: |
            ; /etc/php/7.1/mods-available/zzzz_custom.ini
            ; used in both PHP-FPM and PHP-CLI

            [custom]
            display_errors = "On"
            error_reporting = -1
            date.timezone = "UTC"
            session.save_path = "/var/lib/php/sessions"
            opcache.enable = 1
            opcache.enable_cli = 1
            opcache.fast_shutdown = 1
            opcache.interned_strings_buffer = 16
            opcache.max_accelerated_files = 40000
            opcache.memory_consumption = 256
            opcache.revalidate_freq = 0
            opcache.validate_timestamps = 1
        php-fpm.conf: |
            ; /etc/php/7.1/fpm/php-fpm.conf

            [global]
            pid = /run/php-fpm.pid
            error_log = syslog

            [www]
            listen = "0.0.0.0:9000"
            pm = "dynamic"
            pm.max_children = 5
            pm.start_servers = 2
            pm.min_spare_servers = 1
            pm.max_spare_servers = 3
            security.limit_extensions = ".php"
-
    type: PHP-FPM
    name: ini-7.2
    data:
        php.ini: |
            ; /etc/php/7.2/mods-available/zzzz_custom.ini
            ; used in both PHP-FPM and PHP-CLI

            [custom]
            display_errors = "On"
            error_reporting = -1
            date.timezone = "UTC"
            session.save_path = "/var/lib/php/sessions"
            opcache.enable = 1
            opcache.enable_cli = 1
            opcache.fast_shutdown = 1
            opcache.interned_strings_buffer = 16
            opcache.max_accelerated_files = 40000
            opcache.memory_consumption = 256
            opcache.revalidate_freq = 0
            opcache.validate_timestamps = 1
        php-fpm.conf: |
            ; /etc/php/7.2/fpm/php-fpm.conf

            [global]
            pid = /run/php-fpm.pid
            error_log = syslog

            [www]
            listen = "0.0.0.0:9000"
            pm = "dynamic"
            pm.max_children = 5
            pm.start_servers = 2
            pm.min_spare_servers = 1
            pm.max_spare_servers = 3
            security.limit_extensions = ".php"
-
    type: PHP-FPM
    name: ini-xdebug
    data:
        - |
            ; used in both PHP-FPM and PHP-CLI
            ; make sure to change "docker.for.mac.host.internal" to match your host if required

            [xdebug]
            xdebug.remote_host = "docker.for.mac.host.internal"
            xdebug.default_enable = 1
            xdebug.remote_autostart = 1
            xdebug.remote_connect_back = 0
            xdebug.remote_enable = 1
            xdebug.remote_handler = "dbgp"
            xdebug.remote_port = 9000
-
    type: PHP-FPM
    name: Dockerfile-5.6
    data:
        - |
            FROM ubuntu:16.04

            ENV DEBIAN_FRONTEND noninteractive

            RUN apt-get update && apt-get install -y apt-utils

            # Install common / shared packages
            RUN apt-get install -y \
                curl \
                locales \
                software-properties-common \
                python-software-properties

            # Set up locales
            RUN locale-gen en_US.UTF-8
            ENV LANG C.UTF-8
            ENV LANGUAGE C.UTF-8
            ENV LC_ALL C.UTF-8
            RUN /usr/sbin/update-locale

            RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
                    14AA40EC0831756756D7F66C4F4EA0AAE5267A6C \
                && apt-get update

            # Per-image commands
            ENV PHP_DIR /etc/php/5.6
            ENV PHP_FPM php5.6-fpm
            ARG SYSTEM_PACKAGES
            ARG PHP_PACKAGES
            WORKDIR $PHP_DIR

            RUN add-apt-repository ppa:ondrej/php \
                && apt-get update \
                && apt-get install --no-install-recommends --no-install-suggests -y \
                    ${PHP_FPM} ${SYSTEM_PACKAGES} ${PHP_PACKAGES} \
                && apt-get -y --purge autoremove \
                && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

            ARG PEAR_PACKAGES
            RUN if [ ! -z "$PEAR_PACKAGES" ]; then \
                printf "\n" | pear install -o -f ${PEAR_PACKAGES} \
            ;fi

            ARG PECL_PACKAGES
            RUN if [ ! -z "$PECL_PACKAGES" ]; then \
                pecl channel-update pecl.php.net \
                && printf "\n" | pecl install -o -f ${PECL_PACKAGES} \
            ;fi

            ARG INSTALL_COMPOSER=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin \
                    --filename=composer \
            ;fi

            ARG INSTALL_BLACKFIRE=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
                && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s \
                    https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \
                && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \
                && mv /tmp/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/cli/conf.d/blackfire.ini \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/fpm/conf.d/blackfire.ini \
            ;fi

            EXPOSE 9000

            CMD ["/usr/sbin/php-fpm5.6", "--nodaemonize", "--force-stderr", "--allow-to-run-as-root"]
-
    type: PHP-FPM
    name: Dockerfile-7.0
    data:
        - |
            FROM ubuntu:16.04

            ENV DEBIAN_FRONTEND noninteractive

            RUN apt-get update && apt-get install -y apt-utils

            # Install common / shared packages
            RUN apt-get install -y \
                curl \
                locales \
                software-properties-common \
                python-software-properties

            # Set up locales
            RUN locale-gen en_US.UTF-8
            ENV LANG C.UTF-8
            ENV LANGUAGE C.UTF-8
            ENV LC_ALL C.UTF-8
            RUN /usr/sbin/update-locale

            RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
                    14AA40EC0831756756D7F66C4F4EA0AAE5267A6C \
                && apt-get update

            # Per-image commands
            ENV PHP_DIR /etc/php/7.0
            ENV PHP_FPM php7.0-fpm
            ARG SYSTEM_PACKAGES
            ARG PHP_PACKAGES
            WORKDIR $PHP_DIR

            RUN add-apt-repository ppa:ondrej/php \
                && apt-get update \
                && apt-get install --no-install-recommends --no-install-suggests -y \
                    ${PHP_FPM} ${SYSTEM_PACKAGES} ${PHP_PACKAGES} \
                && apt-get -y --purge autoremove \
                && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

            ARG PEAR_PACKAGES
            RUN if [ ! -z "$PEAR_PACKAGES" ]; then \
                printf "\n" | pear install -o -f ${PEAR_PACKAGES} \
            ;fi

            ARG PECL_PACKAGES
            RUN if [ ! -z "$PECL_PACKAGES" ]; then \
                pecl channel-update pecl.php.net \
                && printf "\n" | pecl install -o -f ${PECL_PACKAGES} \
            ;fi

            ARG INSTALL_COMPOSER=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin \
                    --filename=composer \
            ;fi

            ARG INSTALL_BLACKFIRE=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
                && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s \
                    https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \
                && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \
                && mv /tmp/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/cli/conf.d/blackfire.ini \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/fpm/conf.d/blackfire.ini \
            ;fi

            EXPOSE 9000

            CMD ["/usr/sbin/php-fpm7.0", "--nodaemonize", "--force-stderr", "--allow-to-run-as-root"]
-
    type: PHP-FPM
    name: Dockerfile-7.1
    data:
        - |
            FROM ubuntu:16.04

            ENV DEBIAN_FRONTEND noninteractive

            RUN apt-get update && apt-get install -y apt-utils

            # Install common / shared packages
            RUN apt-get install -y \
                curl \
                locales \
                software-properties-common \
                python-software-properties

            # Set up locales
            RUN locale-gen en_US.UTF-8
            ENV LANG C.UTF-8
            ENV LANGUAGE C.UTF-8
            ENV LC_ALL C.UTF-8
            RUN /usr/sbin/update-locale

            RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
                    14AA40EC0831756756D7F66C4F4EA0AAE5267A6C \
                && apt-get update

            # Per-image commands
            ENV PHP_DIR /etc/php/7.1
            ENV PHP_FPM php7.1-fpm
            ARG SYSTEM_PACKAGES
            ARG PHP_PACKAGES
            WORKDIR $PHP_DIR

            RUN add-apt-repository ppa:ondrej/php \
                && apt-get update \
                && apt-get install --no-install-recommends --no-install-suggests -y \
                    ${PHP_FPM} ${SYSTEM_PACKAGES} ${PHP_PACKAGES} \
                && apt-get -y --purge autoremove \
                && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

            ARG PEAR_PACKAGES
            RUN if [ ! -z "$PEAR_PACKAGES" ]; then \
                printf "\n" | pear install -o -f ${PEAR_PACKAGES} \
            ;fi

            ARG PECL_PACKAGES
            RUN if [ ! -z "$PECL_PACKAGES" ]; then \
                pecl channel-update pecl.php.net \
                && printf "\n" | pecl install -o -f ${PECL_PACKAGES} \
            ;fi

            ARG INSTALL_COMPOSER=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin \
                    --filename=composer \
            ;fi

            ARG INSTALL_BLACKFIRE=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
                && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s \
                    https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \
                && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \
                && mv /tmp/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/cli/conf.d/blackfire.ini \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/fpm/conf.d/blackfire.ini \
            ;fi

            EXPOSE 9000

            CMD ["/usr/sbin/php-fpm7.1", "--nodaemonize", "--force-stderr", "--allow-to-run-as-root"]
-
    type: PHP-FPM
    name: Dockerfile-7.2
    data:
        - |
            FROM ubuntu:16.04

            ENV DEBIAN_FRONTEND noninteractive

            RUN apt-get update && apt-get install -y apt-utils

            # Install common / shared packages
            RUN apt-get install -y \
                curl \
                locales \
                software-properties-common \
                python-software-properties

            # Set up locales
            RUN locale-gen en_US.UTF-8
            ENV LANG C.UTF-8
            ENV LANGUAGE C.UTF-8
            ENV LC_ALL C.UTF-8
            RUN /usr/sbin/update-locale

            RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
                    14AA40EC0831756756D7F66C4F4EA0AAE5267A6C \
                && apt-get update

            # Per-image commands
            ENV PHP_DIR /etc/php/7.2
            ENV PHP_FPM php7.2-fpm
            ARG SYSTEM_PACKAGES
            ARG PHP_PACKAGES
            WORKDIR $PHP_DIR

            RUN add-apt-repository ppa:ondrej/php \
                && apt-get update \
                && apt-get install --no-install-recommends --no-install-suggests -y \
                    ${PHP_FPM} ${SYSTEM_PACKAGES} ${PHP_PACKAGES} \
                && apt-get -y --purge autoremove \
                && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

            ARG PEAR_PACKAGES
            RUN if [ ! -z "$PEAR_PACKAGES" ]; then \
                printf "\n" | pear install -o -f ${PEAR_PACKAGES} \
            ;fi

            ARG PECL_PACKAGES
            RUN if [ ! -z "$PECL_PACKAGES" ]; then \
                pecl channel-update pecl.php.net \
                && printf "\n" | pecl install -o -f ${PECL_PACKAGES} \
            ;fi

            ARG INSTALL_COMPOSER=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin \
                    --filename=composer \
            ;fi

            ARG INSTALL_BLACKFIRE=false
            RUN if [ $INSTALL_COMPOSER=1 ]; then \
                version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
                && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s \
                    https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \
                && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \
                && mv /tmp/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/cli/conf.d/blackfire.ini \
                && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > \
                    ${PHP_DIR}/fpm/conf.d/blackfire.ini \
            ;fi

            EXPOSE 9000

            CMD ["/usr/sbin/php-fpm7.2", "--nodaemonize", "--force-stderr", "--allow-to-run-as-root"]
-
    type: Apache
    name: modules
    data:
        available:
            - access_compat
            - actions
            - alias
            - allowmethods
            - asis
            - auth_basic
            - auth_digest
            - auth_form
            - authn_anon
            - authn_core
            - authn_dbd
            - authn_dbm
            - authn_file
            - authn_socache
            - authnz_fcgi
            - authnz_ldap
            - authz_core
            - authz_dbd
            - authz_dbm
            - authz_groupfile
            - authz_host
            - authz_owner
            - authz_user
            - autoindex
            - brotli
            - buffer
            - cache
            - cache_disk
            - cache_socache
            - cern_meta
            - cgi
            - cgid
            - charset_lite
            - data
            - dav
            - dav_fs
            - dav_lock
            - dbd
            - deflate
            - dialup
            - dir
            - dump_io
            - echo
            - env
            - expires
            - ext_filter
            - file_cache
            - filter
            - headers
            - heartbeat
            - heartmonitor
            - http2
            - ident
            - imagemap
            - include
            - info
            - lbmethod_bybusyness
            - lbmethod_byrequests
            - lbmethod_bytraffic
            - lbmethod_heartbeat
            - ldap
            - log_debug
            - log_forensic
            - lua
            - macro
            - mime
            - mime_magic
            - mpm_prefork
            - mpm_worker
            - negotiation
            - proxy
            - proxy_ajp
            - proxy_balancer
            - proxy_connect
            - proxy_express
            - proxy_fdpass
            - proxy_ftp
            - proxy_hcheck
            - proxy_html
            - proxy_http
            - proxy_http2
            - proxy_scgi
            - proxy_wstunnel
            - ratelimit
            - reflector
            - remoteip
            - reqtimeout
            - request
            - sed
            - session
            - session_cookie
            - session_crypto
            - session_dbd
            - setenvif
            - slotmem_plain
            - slotmem_shm
            - socache_dbm
            - socache_memcache
            - socache_shmcb
            - speling
            - ssl
            - status
            - substitute
            - suexec
            - unique_id
            - userdir
            - usertrack
            - vhost_alias
            - xml2enc
        default:
            - mpm_event
            - proxy_fcgi
            - rewrite
        disable:
            - mpm_prefork
            - mpm_worker
-
    type: Apache
    name: conf
    data:
        apache2.conf: |
            # /etc/apache2/apache2.conf

            DefaultRuntimeDir ${APACHE_RUN_DIR}
            PidFile ${APACHE_PID_FILE}
            Timeout 300
            KeepAlive On
            MaxKeepAliveRequests 100
            KeepAliveTimeout 5
            User ${APACHE_RUN_USER}
            Group ${APACHE_RUN_GROUP}
            HostnameLookups Off
            ErrorLog ${APACHE_LOG_DIR}/error.log
            LogLevel warn

            IncludeOptional mods-enabled/*.load
            IncludeOptional mods-enabled/*.conf

            Include ports.conf

            <Directory />
                Options FollowSymLinks
                AllowOverride None
                Require all denied
            </Directory>

            <Directory /usr/share>
                AllowOverride None
                Require all granted
            </Directory>

            <Directory /var/www/>
                Options Indexes FollowSymLinks
                AllowOverride None
                Require all granted
            </Directory>

            AccessFileName .htaccess

            <FilesMatch "^\.ht">
                Require all denied
            </FilesMatch>

            LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
            LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
            LogFormat "%h %l %u %t \"%r\" %>s %O" common
            LogFormat "%{Referer}i -> %U" referer
            LogFormat "%{User-agent}i" agent

            IncludeOptional conf-enabled/*.conf

            IncludeOptional sites-enabled/*.conf

            ServerName localhost
        ports.conf: |
            # /etc/apache2/ports.conf

            Listen 80
-
    type: Apache
    name: Dockerfile
    data:
        - |
            FROM ubuntu:16.04

            ENV DEBIAN_FRONTEND noninteractive

            RUN apt-get update && apt-get install -y apt-utils

            # Install common / shared packages
            RUN apt-get install -y \
                curl \
                locales \
                software-properties-common \
                python-software-properties

            # Set up locales
            RUN locale-gen en_US.UTF-8
            ENV LANG C.UTF-8
            ENV LANGUAGE C.UTF-8
            ENV LC_ALL C.UTF-8
            RUN /usr/sbin/update-locale

            RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
                    14AA40EC0831756756D7F66C4F4EA0AAE5267A6C \
                && apt-get update

            # Per-image commands
            ENV HTTPD_PREFIX /etc/apache2
            ARG SYSTEM_PACKAGES
            WORKDIR $HTTPD_PREFIX

            RUN add-apt-repository ppa:ondrej/apache2 \
                && apt-get update \
                && apt-get install --no-install-recommends --no-install-suggests -y \
                    apache2 ${SYSTEM_PACKAGES} \
                && apt-get -y --purge autoremove \
                && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
                    conf-enabled/serve-cgi-bin.conf \
                    mods-enabled/autoindex.conf \
                    mods-enabled/autoindex.load \
                && echo "ServerName localhost" >> apache2.conf \
                && ln -sf /dev/stdout /var/log/apache2/access.log \
                && ln -sf /dev/stderr /var/log/apache2/error.log

            EXPOSE 80

            ARG APACHE_MODULES_DISABLE
            RUN if [ ! -z "$APACHE_MODULES_DISABLE" ]; then \
                a2dismod $APACHE_MODULES_DISABLE \
            ;fi

            ARG APACHE_MODULES_ENABLE
            RUN if [ ! -z "$APACHE_MODULES_ENABLE" ]; then \
                a2enmod $APACHE_MODULES_ENABLE \
            ;fi

            CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]

-
    type: Nginx
    name: conf
    data:
        nginx.conf: |
            # /etc/nginx/nginx.conf

            user www-data;
            worker_processes auto;
            pid /run/nginx.pid;
            include /etc/nginx/modules-enabled/*.conf;

            events {
                worker_connections 768;
            }

            http {
                sendfile on;
                tcp_nopush on;
                tcp_nodelay on;
                keepalive_timeout 65;
                types_hash_max_size 2048;

                include /etc/nginx/mime.types;
                default_type application/octet-stream;

                ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                ssl_prefer_server_ciphers on;

                access_log /var/log/nginx/access.log;
                error_log /var/log/nginx/error.log;

                gzip on;
                gzip_disable "msie6";

                include /etc/nginx/conf.d/*.conf;
                include /etc/nginx/sites-enabled/*;
            }
        core.conf: |
            # /etc/nginx/conf.d/core.conf

            client_max_body_size 10m;
            client_body_buffer_size 128k;
        proxy.conf: |
            # /etc/nginx/conf.d/proxy.conf

            proxy_redirect off;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            proxy_buffers 4 256k;
            proxy_buffer_size 128k;
            proxy_http_version 1.0;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_headers_hash_bucket_size 64;
-
    type: Nginx
    name: Dockerfile
    data:
        - |
            FROM ubuntu:16.04

            ENV DEBIAN_FRONTEND noninteractive

            RUN apt-get update && apt-get install -y apt-utils

            # Install common / shared packages
            RUN apt-get install -y \
                curl \
                locales \
                software-properties-common \
                python-software-properties

            # Set up locales
            RUN locale-gen en_US.UTF-8
            ENV LANG C.UTF-8
            ENV LANGUAGE C.UTF-8
            ENV LC_ALL C.UTF-8
            RUN /usr/sbin/update-locale

            RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
                    14AA40EC0831756756D7F66C4F4EA0AAE5267A6C \
                && apt-get update

            # Per-image commands
            ENV NGINX_PREFIX /etc/nginx
            ARG SYSTEM_PACKAGES
            WORKDIR $NGINX_PREFIX

            RUN add-apt-repository ppa:ondrej/nginx \
                && apt-get update \
                && apt-get install --no-install-recommends --no-install-suggests -y \
                    nginx ${SYSTEM_PACKAGES} \
                && apt-get -y --purge autoremove \
                && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
                && ln -sf /dev/stdout /var/log/nginx/access.log \
                && ln -sf /dev/stderr /var/log/nginx/error.log

            EXPOSE 80

            CMD ["nginx", "-g", "daemon off;"]

-
    type: MariaDB
    name: conf
    data:
        my.cnf: |
            # /etc/mysql/my.cnf

            # MariaDB database server configuration file.
            #
            # You can copy this file to one of:
            # - "/etc/mysql/my.cnf" to set global options,
            # - "~/.my.cnf" to set user-specific options.
            #
            # One can use all long options that the program supports.
            # Run program with --help to get a list of available options and with
            # --print-defaults to see which it would actually understand and use.
            #
            # For explanations see
            # http://dev.mysql.com/doc/mysql/en/server-system-variables.html

            # This will be passed to all mysql clients
            # It has been reported that passwords should be enclosed with ticks/quotes
            # escpecially if they contain "#" chars...
            # Remember to edit /etc/mysql/debian.cnf when changing the socket location.
            [client]
            port		= 3306
            socket		= /var/run/mysqld/mysqld.sock

            # Here is entries for some specific programs
            # The following values assume you have at least 32M ram

            # This was formally known as [safe_mysqld]. Both versions are currently parsed.
            [mysqld_safe]
            socket		= /var/run/mysqld/mysqld.sock
            nice		= 0

            [mysqld]
            #
            # * Basic Settings
            #
            #user		= mysql
            pid-file	= /var/run/mysqld/mysqld.pid
            socket		= /var/run/mysqld/mysqld.sock
            port		= 3306
            basedir		= /usr
            datadir		= /var/lib/mysql
            tmpdir		= /tmp
            lc_messages_dir	= /usr/share/mysql
            lc_messages	= en_US
            skip-external-locking
            #
            # Instead of skip-networking the default is now to listen only on
            # localhost which is more compatible and is not less secure.
            #bind-address		= 127.0.0.1
            #
            # * Fine Tuning
            #
            max_connections		= 100
            connect_timeout		= 5
            wait_timeout		= 600
            max_allowed_packet	= 16M
            thread_cache_size       = 128
            sort_buffer_size	= 4M
            bulk_insert_buffer_size	= 16M
            tmp_table_size		= 32M
            max_heap_table_size	= 32M
            #
            # * MyISAM
            #
            # This replaces the startup script and checks MyISAM tables if needed
            # the first time they are touched. On error, make copy and try a repair.
            myisam_recover_options = BACKUP
            key_buffer_size		= 128M
            #open-files-limit	= 2000
            table_open_cache	= 400
            myisam_sort_buffer_size	= 512M
            concurrent_insert	= 2
            read_buffer_size	= 2M
            read_rnd_buffer_size	= 1M
            #
            # * Query Cache Configuration
            #
            # Cache only tiny result sets, so we can fit more in the query cache.
            query_cache_limit		= 128K
            query_cache_size		= 64M
            # for more write intensive setups, set to DEMAND or OFF
            #query_cache_type		= DEMAND
            #
            # * Logging and Replication
            #
            # Both location gets rotated by the cronjob.
            # Be aware that this log type is a performance killer.
            # As of 5.1 you can enable the log at runtime!
            #general_log_file        = /var/log/mysql/mysql.log
            #general_log             = 1
            #
            # Error logging goes to syslog due to /etc/mysql/conf.d/mysqld_safe_syslog.cnf.
            #
            # we do want to know about network errors and such
            #log_warnings		= 2
            #
            # Enable the slow query log to see queries with especially long duration
            #slow_query_log[={0|1}]
            slow_query_log_file	= /var/log/mysql/mariadb-slow.log
            long_query_time = 10
            #log_slow_rate_limit	= 1000
            #log_slow_verbosity	= query_plan

            #log-queries-not-using-indexes
            #log_slow_admin_statements
            #
            # The following can be used as easy to replay backup logs or for replication.
            # note: if you are setting up a replication slave, see README.Debian about
            #       other settings you may need to change.
            #server-id		= 1
            #report_host		= master1
            #auto_increment_increment = 2
            #auto_increment_offset	= 1
            #log_bin			= /var/log/mysql/mariadb-bin
            #log_bin_index		= /var/log/mysql/mariadb-bin.index
            # not fab for performance, but safer
            #sync_binlog		= 1
            expire_logs_days	= 10
            max_binlog_size         = 100M
            # slaves
            #relay_log		= /var/log/mysql/relay-bin
            #relay_log_index	= /var/log/mysql/relay-bin.index
            #relay_log_info_file	= /var/log/mysql/relay-bin.info
            #log_slave_updates
            #read_only
            #
            # If applications support it, this stricter sql_mode prevents some
            # mistakes like inserting invalid dates etc.
            #sql_mode		= NO_ENGINE_SUBSTITUTION,TRADITIONAL
            #
            # * InnoDB
            #
            # InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
            # Read the manual for more InnoDB related options. There are many!
            default_storage_engine	= InnoDB
            # you can't just change log file size, requires special procedure
            #innodb_log_file_size	= 50M
            innodb_buffer_pool_size	= 256M
            innodb_log_buffer_size	= 8M
            innodb_file_per_table	= 1
            innodb_open_files	= 400
            innodb_io_capacity	= 400
            innodb_flush_method	= O_DIRECT
            #
            # * Security Features
            #
            # Read the manual, too, if you want chroot!
            # chroot = /var/lib/mysql/
            #
            # For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
            #
            # ssl-ca=/etc/mysql/cacert.pem
            # ssl-cert=/etc/mysql/server-cert.pem
            # ssl-key=/etc/mysql/server-key.pem

            #
            # * Galera-related settings
            #
            [galera]
            # Mandatory settings
            #wsrep_on=ON
            #wsrep_provider=
            #wsrep_cluster_address=
            #binlog_format=row
            #default_storage_engine=InnoDB
            #innodb_autoinc_lock_mode=2
            #
            # Allow server to accept connections on all interfaces.
            #
            #bind-address=0.0.0.0
            #
            # Optional setting
            #wsrep_slave_threads=1
            #innodb_flush_log_at_trx_commit=0

            [mysqldump]
            quick
            quote-names
            max_allowed_packet	= 16M

            [mysql]
            #no-auto-rehash	# faster start of mysql but no tab completion

            [isamchk]
            key_buffer		= 16M

            #
            # * IMPORTANT: Additional settings that can override those from this file!
            #   The files must end with '.cnf', otherwise they'll be ignored.
            #
            !includedir /etc/mysql/conf.d/
        config-file.cnf: |
            # /etc/mysql/conf.d/config-file.cnf

-
    type: MySQL
    name: conf
    data:
        config-file.cnf: |
            # /etc/mysql/conf.d/config-file.cnf
